<template>
	<cl-page>1111111111
		<view class="px-5">
			<view>
				<cl-text color="#777777">风格选取:</cl-text>
				<view class="flex flex-wrap flex-row mt-4 borderf pb-4 mb-4">
					<cl-tag
						v-for="(item, index) in tagList"
						:key="index"
						class="mb-2 mr-4 backgrou4a"
						:pt="{
							text: {
								className: '!text-gray-700'
							}
						}"
						>{{ t(item.text) }}</cl-tag
					>
				</view>
			</view>
			<view>
				<cl-text color="#777777">最大字数:</cl-text>
				<view class="flex flex-wrap flex-row mt-4 borderf pb-4">
					<cl-tag
						v-for="(item, index) in maxList"
						:key="index"
						class="mb-2 ml-[0rpx] mr-4 backgrou4a"
						:pt="{
							text: {
								className: '!text-gray-700'
							}
						}"
						@click="setMaxlength(item.text)"
						>{{ t(item.text) }}</cl-tag
					>
				</view>
			</view>
			<!-- 生成口播文案 -->
			<view>
				<cl-text color="#777777">核心目标:</cl-text>
				<view class="flex flex-wrap flex-row mt-4 borderf pb-4 mb-4">
					<cl-tag
						v-for="(item, index) in targetList"
						:key="index"
						class="mb-2 mr-4 backgrou4a"
						:pt="{
							text: {
								className: '!text-gray-700'
							}
						}"
						>{{ t(item.text) }}</cl-tag
					>
				</view>
			</view>
			<view>
				<cl-text color="#777777">语言风格:</cl-text>
				<view class="flex flex-wrap flex-row mt-4 borderf pb-4">
					<cl-tag
						v-for="(item, index) in languageList"
						:key="index"
						class="mb-2 ml-[0rpx] mr-4 backgrou4a"
						:pt="{
							text: {
								className: '!text-gray-700'
							}
						}"
						@click="setMaxlength(item.text)"
						>{{ t(item.text) }}</cl-tag
					>
				</view>
			</view>
			<!-- 新闻稿改写 -->
			<view>
				<cl-text color="#777777">角度与立意::</cl-text>
				<view class="flex flex-wrap flex-row mt-4 borderf pb-4">
					<cl-tag
						v-for="(item, index) in angleList"
						:key="index"
						class="mb-2 ml-[0rpx] mr-4 backgrou4a"
						:pt="{
							text: {
								className: '!text-gray-700'
							}
						}"
						@click="setMaxlength(item.text)"
						>{{ t(item.text) }}</cl-tag
					>
				</view>
			</view>
			<view>
				<cl-text color="#777777">结构与逻辑:</cl-text>
				<view class="flex flex-wrap flex-row mt-4 borderf pb-4">
					<cl-tag
						v-for="(item, index) in structureList"
						:key="index"
						class="mb-2 ml-[0rpx] mr-4 backgrou4a"
						:pt="{
							text: {
								className: '!text-gray-700'
							}
						}"
						@click="setMaxlength(item.text)"
						>{{ t(item.text) }}</cl-tag
					>
				</view>
			</view>
			<!-- 语音转文字 -->
			<view> </view>
			<!-- 翻译 -->
			<view
				class="flex flex-row justify-between items-center mt-6 backgrou4a rounded-lg px-7 py-2 menuBox"
			>
				<view class="flex flex-row items-center" @click="filterVisible = !filterVisible">
					<cl-text>{{ menu1default }}</cl-text>
					<cl-icon name="arrow-down-s-line" size="26rpx" color="#414141"></cl-icon>
				</view>
				<view class="flex flex-row items-center justify-center flex-1">
					<view class="bg-white p-2 rounded-full">
						<cl-icon name="qiehuan" size="26rpx" color="#414141"></cl-icon>
					</view>
				</view>
				<view class="flex flex-row items-center" @click="filterVisible2 = !filterVisible2">
					<cl-text>{{ menu1default2 }}</cl-text>
					<cl-icon name="arrow-down-s-line" size="26rpx" color="#414141"></cl-icon>
				</view>
				<!-- 下拉菜单列表 -->
			</view>
			<view class="px-5 flex flex-col menuList rounded-lg" v-if="filterVisible">
				<view v-for="(item, index) in coreOptions" :key="index" class="py-2"
					><cl-text color="#949494">{{ item?.label }}</cl-text></view
				>
			</view>
			<view class="px-5 flex flex-col menuList2 rounded-lg" v-if="filterVisible2">
				<view v-for="(item, index) in EnglishOptions" :key="index" class="py-2"
					><cl-text color="#949494">{{ item?.label }}</cl-text></view
				>
			</view>
			<cl-textarea
				:autofocus="true"
				height="245rpx"
				show-word-limit
				:border="false"
				:maxlength="maxlength"
				placeholder="请输入您的需求"
				class="mt-6 backgrou4a"
				:pt="{
					inner: {
						className: '!text-sky-700'
					}
				}"
			></cl-textarea>
			<cl-button @tap="submit" size="large" rounded :pt="{ className: 'mt-5' }">{{
				t("开始写作")
			}}</cl-button>
		</view>
	</cl-page>
</template>

<script setup>
import { onMounted, ref } from "vue";
import { t } from "@/locale";
import { isMp, router, useRefs } from "@/cool";
import { useUi, } from "@/uni_modules/cool-ui";
const menu1default=ref('自动检测')
const menu1default2=ref('英语')
type tagItem = {
	text : string;
};

const filterVisible = ref(false);
const filterVisible2 = ref(false);
type FilterForm = {
	core: number;
	sort: string;
	switch: boolean;
};

const filterForm = reactive<FilterForm>({
	core: 0,
	sort: "none",
	switch: false
});
const coreOptions = ref<ClSelectOption[]>([
	{
		label: "自动检测",
		value: 1,
	},
	{
		label: "简易中文",
		value: 2,
	},
	{
		label: "英语",
		value: 3,
	},
	{
		label: "日语",
		value: 4,
	},
	{
		label: "韩语",
		value: 5,
	},
	{
		label: "法语",
		value: 6,
	},
	{
		label: "西班牙语",
		value: 7,
	},
]);
const EnglishOptions = ref<ClSelectOption[]>([
		{
		label: "简易中文",
		value: 2,
	},{
		label: "英语",
		value: 3,
	},
	{
		label: "日语",
		value: 4,
	},
	{
		label: "韩语",
		value: 5,
	},
	{
		label: "法语",
		value: 6,
	},
	{
		label: "西班牙语",
		value: 7,
	},
]);
// function onOptionsChange(val: string | number) {
// 	console.log(val);
// 	filterForm.core = val;
// }
const maxlength = ref(500);
const setMaxlength = (val : string) => {
	if (val == "不限制" || val == "输入其他") {
		maxlength.value = 9999;
	} else {
		const num = parseInt(val);
		// 检查转换结果是否有效
		maxlength.value = isNaN(num) ? 0 : num;
	}
};
const tagList = ref<tagItem[]>([
	{ text: "党报" },
	{ text: "彭博社" },
	{ text: "华尔街日报" },
	{ text: "每日经济新闻" },
	{ text: "智谷趋势" },
	{ text: "深蓝财经" }
]);
const maxList = ref<tagItem[]>([
	{ text: "不限制" },
	{ text: "150" },
	{ text: "300" },
	{ text: "400" },
	{ text: "450" },
	{ text: "500" },
	{ text: "600" },
	{ text: "输入其他" }
]);
const targetList = ref<tagItem[]>([
	{ text: "品牌导向" },
	{ text: "效果导向" },
	{ text: "互动导向" },
	{ text: "内容导向" },
]);
const languageList = ref<tagItem[]>([
	{ text: "正式感 " },
	{ text: "随意感" },
	{ text: "理性感" },
	{ text: "活泼感" },
	{ text: "沉稳感" },
]);
const angleList = ref<tagItem[]>([
	{ text: "行业视角" },
	{ text: "大众视角" },
	{ text: "企业视角" },
	{ text: "用户视角" },
	{ text: "产品视角" },
	{ text: "故事/人物视角" },
]);
const structureList = ref<tagItem[]>([
	{ text: "倒金字塔结构" },
	{ text: "黄金圈法则" },
]);
const submit = () => {
	uni.showToast({
		title: "功能开发中，敬请期待",
		icon: "none"
	});
};

</script>

<style>
.cl-tag {
	margin-left: 0rpx !important;
}

.borderf {
	border-bottom: 2rpx solid #f1f1f1;
}

.backgrou4a {
	background-color: #f9f9f9;
}
.menuBox {
	position: relative;
}
.menuList {
	border: 2rpx solid #f3f3f3;
	background-color: #fff;
	position: absolute;
	top: 620rpx;
	left: 60rpx;
	z-index: 999;
}
.menuList2 {
	border: 2rpx solid #f3f3f3;
	background-color: #fff;
	position: absolute;
	top: 620rpx;
	right: 60rpx;
	z-index: 999;
}
</style>

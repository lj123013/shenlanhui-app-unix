<template>
	<cl-page>
		<cl-topbar fixed :show-back="false" safe-area-top :pt="{ className: 'px-5' }">
			<template #prepend>
				<view class="bg-primary-500 rounded-full w-[60rpx] h-[60rpx] flex flex-col items-center justify-center"
					@click="router.to('/pages/user/my')">
					<cl-icon name="a-zu254" color="white" size="28rpx"></cl-icon>
				</view>
			</template>
			<cl-text color="black" :pt="{ className: '!text-xl fontBold' }">资讯</cl-text>
		</cl-topbar>
		<view class="serach rounded-full bg-gray-50 py-3 px-3 flex flex-row items-center mx-5">

			<cl-input class="bg-gray-50" placeholder="请输入你要搜索的内容" v-model="serach" :border="false">
				<template #prepend>
					<cl-icon name="a-zu257" color="#CDCDCD" :size="24" :pt="{className:'mr-2'}"></cl-icon>
				</template>
			</cl-input>
		</view>
		<!-- 文章列表 -->
		<cl-list-view ref="listViewRef" :data="listView" :virtual="false" :pt="{
				refresher: {
					className: 'pt-3'
				}
			}" :refresher-enabled="true" @pull="onPull" @bottom="loadMore">
			<template #item="{ value, index }">
				<article-item :value="value" :index="index" @item-click="onItemClick"></article-item>
			</template>

			<template #bottom>
				<view class="py-3">
					<cl-loadmore :loading="loading" :finish="finished" v-if="list.length > 0"></cl-loadmore>
				</view>
			</template>
		</cl-list-view>
		<!-- 自定义底部导航栏 -->
		<Tabbar></Tabbar>
	</cl-page>
</template>

<script setup lang="ts">
	import { ref } from "vue"
	import { isMp, router, useRefs, usePager, parse, isArray, isNull } from "@/cool";
	import Tabbar from "@/components/tabbar.uvue";
	import { useUi } from "@/uni_modules/cool-ui";
	import { t } from "@/locale";
	import articleItem from "../articlePage/articleItem.uvue";
	import { articles } from '@/cool/service/list'
	const ui = useUi();
	const serach = ref("")
	// 处理文章项点击事件
	const onItemClick = (item : UTSJSONObject) => {
		console.log('点击文章项:', item.id);
		router.push({
			path: '/pages/articlePage/articleDetail',
			params: {
				articleId: item.id,
				title: '文章'
			}
		});
	};
	const listViewRef = ref<ClListViewComponentPublicInstance | null>(null);
	const { refresh, list, listView, loading, loadMore,finished } = usePager((params, { render }) => {
		articles({
			page: params["page"],
			per_page: params["size"],
			status: "published",
			sort: "latest",
			search: serach.value,
		}).then(res => {
			ui.hideLoading()
			if (res != null) {
				console.log(res)
				const result = parse<UTSJSONObject>(res)!
				console.log(result,"result")
				render({
					list: result.data,
					pagination: {
						page: params["page"],
						size: params["size"],
						total: result.total

					}

				});


			}

		}).catch(err => {
				ui.hideLoading()
				ui.showToast({
					message: (err as Response).message!,
				});
			})

	});
	async function onPull() {
		await refresh({ page: 1 });
		listViewRef.value!.stopRefresh();
	}

	onReady(() => {
		ui.showLoading(t("加载中"));
		// 默认请求
		refresh({});
	});
</script>

<style></style>
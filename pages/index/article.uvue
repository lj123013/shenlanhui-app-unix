<template>
	<cl-page>
		<cl-topbar title="资讯" fixed :show-back="false" safe-area-top :pt="{ className: 'px-5' }">
			<template #prepend>
				<view class="bg-primary-500 rounded-full w-[52rpx] h-[52rpx] flex flex-col items-center justify-center"
					@click="userinfo">
					<cl-icon name="a-zu254" color="white" size="20rpx"></cl-icon>
				</view>
			</template>
		</cl-topbar>
		<view class="content px-5">
			<view class="serach rounded-full bg-gray-50 py-3 px-3 flex flex-row items-center">
				<cl-icon name="a-zu257" color="#CDCDCD" :size="24"></cl-icon>
				<cl-text class="text-neutral-300 ml-2">请输入你要搜索的内容</cl-text>
			</view>
			<!-- 文章列表 -->
			<cl-list-view ref="listViewRef" :data="listView" :virtual="false" :pt="{
				refresher: {
					className: 'pt-3'
				}
			}" :refresher-enabled="true" @pull="onPull" @bottom="loadMore">
				<template #item="{ value, index }">
					<article-item :value="value" :index="index" @item-click="onItemClick"></article-item>
				</template>

				<template #bottom>
					<view class="py-3">
						<cl-loadmore :loading="loading" v-if="list.length > 0"></cl-loadmore>
					</view>
				</template>
			</cl-list-view>
		</view>
		<!-- 自定义底部导航栏 -->
		<tabbar></tabbar>
	</cl-page>
</template>

<script setup lang="ts">
	import { ref } from "vue"
	import { isMp, router, useRefs } from "@/cool";
	import { useUi } from "@/uni_modules/cool-ui";
	import { usePager } from "@/cool";
	import { t } from "@/locale";
	import articleItem from "../articlePage/articleItem.uvue";
	import Tabbar from "@/components/tabbar.uvue";
	const ui = useUi();
	// 进入用户主页
	const userinfo = () => {
		router.to('/pages/user/userinfo')
	}

	// 处理文章项点击事件
	const onItemClick = (item: UTSJSONObject) => {
		console.log('点击文章项:', item);
		router.push({
			path: '/pages/articlePage/articleDetail',
			params: {
				articleId: item.id,
				title: item.title,
				author: item.author,
				cover_url: item.cover_url,
				acreat_time: item.acreat_time
			}
		});
	};
	const listViewRef = ref<ClListViewComponentPublicInstance | null>(null);

	let id = 0;

	const { refresh, list, listView, loading, loadMore } = usePager((params) => {
		return new Promise((resolve) => {
			// 模拟请求
			setTimeout(() => {
				const mockData = {
					list: [
						{
							title: t("产品筑底、数智驱动，泸州老窖构建穿越周期护城河"),
							author: t("深蓝财经"),
							cover_url: t("https://unix.cool-js.com/images/demo/avatar.jpg"),
							acreat_time: 175523522,
							id: 1
						},
						{
							title: t("渤海银行承载全国首批科技创新债券奋力书写“科技金融大文章”"),
							author: t("深蓝财经"),
							cover_url: t("https://img.shenlanhui.com/UPLOAD/2025/08/25/68ac1b3fd1160.png_thumb.jpg"),
							acreat_time: 175523522,
							id: 1
						},
						{
							title: t("产品筑底、数智驱动，泸州老窖构建穿越周期护城河"),
							author: t("深蓝财经"),
							cover_url: t("https://img.shenlanhui.com/UPLOAD/2025/08/25/68ac1b3fd1160.png_thumb.jpg"),
							acreat_time: 175523522,
							id: 1
						},
						{
							title: t("渤海银行承载全国首批科技创新债券奋力书写“科技金融大文章”"),
							author: t("深蓝财经"),
							cover_url: t("https://img.shenlanhui.com/UPLOAD/2025/08/25/68ac1b3fd1160.png_thumb.jpg"),
							acreat_time: 175523522,
							id: 1
						},
						{
							title: t("产品筑底、数智驱动，泸州老窖构建穿越周期护城河"),
							author: t("深蓝财经"),
							cover_url: t("https://img.shenlanhui.com/UPLOAD/2025/08/25/68ac1b3fd1160.png_thumb.jpg"),
							acreat_time: 175523522,
							id: 1
						},
						{
							title: t("渤海银行承载全国首批科技创新债券奋力书写“科技金融大文章”"),
							author: t("深蓝财经"),
							cover_url: t("https://img.shenlanhui.com/UPLOAD/2025/08/25/68ac1b3fd1160.png_thumb.jpg"),
							acreat_time: 175523522,
							id: 1
						}
					],
					pagination: {
						page: params["page"],
						size: params["size"],
						total: 100
					}
				};

				// console.log('模拟请求返回的数据:', mockData);
				// console.log('模拟请求的list数组:', mockData.list);

				resolve(mockData);

				ui.hideLoading();
			}, 1000);
		});
	});

	async function onPull() {
		await refresh({ page: 1 });
		listViewRef.value!.stopRefresh();
	}

	onReady(() => {
		// console.log('listView:', listView.value);
		// console.log('list数组:', list.value);
		ui.showLoading(t("加载中"));
		// 默认请求
		refresh({});
	});
</script>

<style></style>
<template>
	<view class="flex flex-col">
		<view class="mb-3 flex flex-row border-bottom">
			<cl-input
				v-model="form.email"
				:placeholder="t('请输入邮箱')"
				:border="false"
				:pt="{
					className: parseClass([
						'!h-[90rpx] flex-1 !rounded-xl !px-4',
						[isDark, '!bg-surface-70', '!bg-white']
					]),
					prefixIcon: {
						className: 'mr-1'
					}
				}"
			></cl-input>
		</view>

		<view class="relative flex flex-row items-center mb-5 border-bottom">
			<cl-input
				v-model="form.smsCode"
				:clearable="false"
				type="number"
				:placeholder="t('请输入验证码')"
				:maxlength="6"
				:border="false"
				:pt="{
					className: parseClass([
						'!h-[90rpx] flex-1 !rounded-xl !px-4',
						[isDark, '!bg-surface-70', '!bg-white']
					]),
					prefixIcon: {
						className: 'mr-1'
					}
				}"
			>
			</cl-input>

			<view class="absolute right-0">
				<sms-btn
					:ref="refs.set('smsBtn')"
					:email="form.email"
					@success="showCode = true"
				></sms-btn>
			</view>
		</view>

		<cl-button
			:pt="{
				className: '!h-[90rpx] !rounded-full'
			}"
			:loading="loading"
			:disabled="disabled"
			@tap="toLogin"
		>
			{{ t("登录") }}
		</cl-button>
	</view>
</template>

<script setup lang="ts">
import { t } from "@/locale";
import { computed, inject, ref, type PropType } from "vue";
import type { LoginForm } from "../../types";
import SmsBtn from "@/components/sms-btn.uvue";
import { isDark, parseClass, request, useRefs, type Response } from "@/cool";
import { useUi } from "@/uni_modules/cool-ui";

const props = defineProps({
	form: {
		type: Object as PropType<LoginForm>,
		default: () => ({})
	}
});

const emit = defineEmits(["success"]);

const ui = useUi();
const refs = useRefs();

// 是否同意
const isAgree = inject("isAgree") as () => boolean;

// 是否显示验证码
const showCode = ref(false);

// 是否加载中
const loading = ref(false);

// 是否禁用
const disabled = computed(() => {
	return props.form.email == "" || props.form.smsCode == "";
});

// 登录
async function toLogin() {
	if (!isAgree()) {
		return;
	}
	console.log(props.form, "验证码");
	const { email, smsCode } = props.form;

	loading.value = true;

	await request({
		url: "/api/v2/users/login-with-code",
		method: "POST",
		data: {
			// 修改参数名以匹配后端要求
			email: email,
			code: smsCode
		}
	})
		.then((res) => {
			emit("success", res);
		})
		.catch((err) => {
			ui.showToast({
				message: (err as Response).message!
			});
		});

	loading.value = false;
}
</script>
<style></style>

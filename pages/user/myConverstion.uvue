<template>
	<cl-page>
		<cl-topbar fixed safe-area-top>
			<cl-text color="#3A3A3A" :pt="{ className: '!text-xl' }">我的AI</cl-text>
		</cl-topbar>
		<cl-list-view ref="listViewRef" :data="listView" :virtual="false" :pt="{
			refresher: {
				className: 'pt-3'
			}
		}" :refresher-enabled="false" @bottom="loadMore">
			<template #item="{ value, index }">
				<converstion-item :value="value" :index="index" @item-click="onItemClick" @delete-item="handleDeleteItem"></converstion-item>
			</template>
			<template #bottom>
				<view class="py-3">
					<cl-loadmore :loading="loading" :finish="true"  v-if="list.length > 0" :safeAreaBottom='true' :pt="{text:{className:'text-sm text-gray-400'}}"></cl-loadmore>
				</view>
			</template>
		</cl-list-view>
	</cl-page>
</template>

<script setup>
import { isMp, isNull, router, useRefs, usePager,parse } from "@/cool";
import { useUi } from "@/uni_modules/cool-ui";
import { t } from "@/locale";
import converstionItem from "@/components/converstion-item.uvue";
import { getConversations } from "@/cool/service/user";
const ui = useUi();
const listViewRef = ref < ClListViewComponentPublicInstance | null > (null);
let id = 0;
const { refresh, list, listView, loading, loadMore } = usePager((params, { render }) => {
	// 模拟请求
	getConversations({
		page: params["page"],
		limit: params["size"],
	}).then((res) => {
		ui.hideLoading()
		const result = parse < UTSJSONObject > (res)!
		console.log('获取对话列表', result);
		const page = result.pagination
		if (!isNull(page)) {
			const pageDta = parse < UTSJSONObject > (page as Any)!
			render({
				list: result.conversations,
				pagination: {
					page: params["page"],
					size: params["size"],
					total: pageDta.total

				}

			});
		}

		// render(res.data);
	}).catch((err) => {
		ui.hideLoading();
	});
});
const onItemClick = (item: UTSJSONObject) => {
	console.log('点击文章项:', item);
	router.push({
		path: '/pages/user/myconverstionDeatail',
		params: {
			conversation_id: item.conversation_id,
		}
	});
};
	// 删除对话
	const handleDeleteItem=(itemInfo : UTSJSONObject)=>{
		const index = list.value.findIndex((item) => item.id === itemInfo.id);
		if (index !== -1) {
			list.value.splice(index, 1);
		}
	}
onReady(() => {
	ui.showLoading(t("加载中"));

	// 默认请求
	refresh({});
});
</script>

<style lang="scss"></style>
<template>
	<cl-page :backTop="true" safe-area @scroll="onScroll">
		<!-- 固定导航栏（滚动后显示） -->
		<view class="fixed-navbar" :class="{ show: showNavbar }">
			<cl-topbar safe-area-top color="black" background-color="white" :pt="{
					back: {
						size: 48
					}
				}">
				<template #prepend>
					<view class="flex flex-row items-center">
						<cl-avatar rounded :src="UserInfo?.avatar" :size="40"></cl-avatar>
						<cl-text color="black" :pt="{ className: 'text-base font-medium ml-1' }">{{
							UserInfo.username
						}}</cl-text>
					</view>
				</template>
				<template #append>
					<cl-icon name="zhuanfa1" color="black" :size="30" :pt="{ className: 'mr-3' }"
						@tap="share"></cl-icon>
				</template>
			</cl-topbar>
		</view>
		<view class="">
			<cl-list-view ref="listViewRef" :data="listView" :virtual="false" :pt="{
					refresher: {
						className: 'pt-3'
					}
				}" :refresher-enabled="false" @bottom="loadMore">
				<template #top>
					<view class="container">
						<!-- 背景图片 -->
						<cl-image class="background-image" width="100%" height="462rpx"
							src="../../static/image/user-banner.png" mode="aspectFill"></cl-image>
						<!-- 页面内容 -->
						<view class="navabar">
							<cl-topbar safe-area-top color="white" background-color="transparent" :pt="{
								back: {
									size: 48
								}
							}">
								<template #append>
									<cl-icon name="zhuanfa1" color="white" :size="30" :pt="{ className: 'mr-3' }"
										@tap="share"></cl-icon>
								</template>
							</cl-topbar>
							<view class="user-info px-5">
								<view class="flex flex-row items-center justify-between mt-5">
									<view class="flex items-center flex-row">
										<cl-avatar rounded :src="UserInfo?.avatar"></cl-avatar>
										<cl-text color="white" :pt="{ className: '!text-xl mx-1' }">{{
										UserInfo.username
									}}</cl-text>

										<view class="bg-white rounded-3xl p-[4rpx] flex items-center justify-center"
											v-if="isAuthMessage.type_label == '个人认证'">
											<cl-icon name="renzheng2" color="#FE0000" :size="16"></cl-icon>
										</view>
										<view class="bg-white rounded-3xl p-[4rpx] flex items-center justify-center"
											v-else-if="isAuthMessage.type_label == '组织认证'">
											<cl-icon name="a-renzheng21" color="primary" :size="16"></cl-icon>
										</view>
									</view>
									<!-- isFollow==true已关注 isFollow==false未关注 -->
									<view
										class="follow-wrapper w-[98rpx] h-[45rpx] flex flex-col items-center justify-center rounded-full"
										:class="UserInfo?.is_followed == true ? 'bg8b' : 'bg-white'">
										<cl-text v-if="UserInfo?.is_followed == false" color="primary" :pt="{
											className: '!text-xs'
										}">关注</cl-text>
										<cl-text v-else color="primary" :pt="{
											className: '!text-xs'
										}">已关注</cl-text>
									</view>
								</view>
								<view class="flex flex-row items-center justify-between mt-5"
									@tap="userRenzheng = true">
									<!-- 认证信息 -->
									<view class="flex-1">
										<!-- 个人认证 -->
										<view class="flex flex-row items-center"
											v-if="UserInfo.verification?.type_label == '个人认证'">
											<cl-icon name="huiyuan" color="white" :size="20"
												:pt="{ className: 'mr-1' }"></cl-icon>
											<cl-text color="white" :pt="{ className: '!text-sm' }">媒体-</cl-text>
											<cl-text color="white" :pt="{ className: '!text-sm' }">主持人</cl-text>
										</view>
										<!-- 企业认证 -->
										<view v-else>
											<view class="flex flex-row items-center">
												<cl-icon name="huiyuan" color="white" :size="20"
													:pt="{ className: 'mr-1' }"></cl-icon>
												<cl-text color="white" :pt="{ className: '!text-sm' }">{{
												isAuthMessage.display_title
											}}</cl-text>
											</view>
											<view class="flex flex-row items-center">
												<cl-icon name="tishi" color="white" :size="20"
													:pt="{ className: 'mr-1' }"></cl-icon>
												<cl-text ellipsis color="white"
													:pt="{ className: '!text-sm' }">{{ organization.intro }}</cl-text>
											</view>
										</view>
									</view>
									<view class="w-[30rpx]">
										<cl-icon name="arrow-right-s-line" color="white"></cl-icon>
									</view>
								</view>
							</view>
						</view>
					</view>
					<view class="flex flex-row">
						<cl-tabs v-model="current" class="fontBold" :showLine="false" :list="tabbar"
							:color="isColor ? '#2854F2' : ''" un-color="#6a6a6a"></cl-tabs>
					</view>
				</template>
				<template #item="{ value, index }">
					<circle-item :value="value" :index="index" :typeTitle="typeTitle"
						@item-click="onItemClick"></circle-item>
				</template>
				<template #bottom>
					<view class="py-3">
						<cl-loadmore :loading="loading" :finish="finished" v-if="list.length > 0"></cl-loadmore>
					</view>
				</template>
			</cl-list-view>
		</view>
		<!-- 显示用户认证信息弹框 -->
		<cl-popup v-model="userRenzheng" :show-header="false">
			<view class="p-4">
				<view class="flex flex-row items-center justify-between mt-5">
					<view class="flex items-center flex-row">
						<cl-avatar rounded :src="UserInfo?.avatar"></cl-avatar>
						<cl-text color="black" :pt="{ className: '!text-xl mx-1' }">{{
							UserInfo.username
						}}</cl-text>
						<cl-icon v-if="isAuthMessage.type_label == '个人认证'" name="renzheng2" color="#FE0000"
							:size="16"></cl-icon>
						<cl-icon v-else-if="isAuthMessage.type_label == '组织认证'" name="a-renzheng21" color="primary"
							:size="16"></cl-icon>
					</view>
					<!-- isFollow==true已关注 isFollow==false未关注 -->
					<cl-icon name="cuo" color="#131313" :size="26" @tap="userRenzheng = false"></cl-icon>
				</view>
				<view class="flex flex-row items-center justify-between mt-5">
					<!-- 认证信息 -->
					<view>
						<!-- 个人认证 -->
						<view class="flex flex-row items-center" v-if="isAuthMessage.type_label == '个人认证'">
							<cl-icon name="huiyuan" size="18rpx" :pt="{ className: 'mr-1 color2c' }"></cl-icon>
							<cl-text :pt="{ className: '!text-sm color2c' }">媒体-</cl-text>
							<cl-text :pt="{ className: '!text-sm color2c' }">主持人</cl-text>
						</view>
						<!-- 企业认证 -->
						<view v-else>
							<view class="flex flex-row items-center">
								<cl-icon name="huiyuan" :size="20" :pt="{ className: 'mr-1 color2c' }"></cl-icon>
								<cl-text :pt="{ className: '!text-sm color2c' }">{{
									isAuthMessage.display_title
								}}</cl-text>
							</view>
							<view class="flex flex-row items-center mt-1">
								<cl-icon name="tishi" :size="20" :pt="{ className: 'mr-1 color2c' }"></cl-icon>
								<cl-text :pt="{ className: '!text-sm color2c' }">{{
									organization.intro
								}}</cl-text>
							</view>
						</view>
						<!-- 描述 -->
						<view class="mt-4">
							<view class="flex flex-row items-center">
								<cl-icon name="shijian" :size="20" :pt="{ className: 'mr-1 color2c' }"></cl-icon>
								<cl-text :pt="{ className: '!text-sm color2c' }">入驻时间：</cl-text>
								<l-dateformat class="text" :date="isAuthMessage.joined_at" format="yyyy-MM-dd" />
							</view>
							<view class="flex flex-row items-center mt-1">
								<cl-icon name="dingwei" :size="20" :pt="{ className: 'mr-1 color2c' }"></cl-icon>
								<cl-text :pt="{ className: '!text-sm color2c' }">常住地址：{{ organization.city }}</cl-text>
							</view>
						</view>
						<!-- 擅长领域 -->
						<view class="mt-4">
							<cl-text :pt="{ className: '!text-lg fontBold color2c mb-3' }">擅长领域</cl-text>
							<cl-row :gutter="12">
								<cl-col :span="6" v-for="item in areaList" :key="item">
									<view
										class="item mb-2 bg-neutral-100 rounded-[10rpx] py-2 flex flex-col items-center justify-center">
										<cl-text :pt="{ className: '!text-sm color5e' }">{{
											item
										}}</cl-text>
									</view>
								</cl-col>
							</cl-row>
						</view>
					</view>
				</view>
			</view>
		</cl-popup>
		<!-- swipeClose关闭拖拽 列表用户操作-->
		<cl-popup v-model="visible" :show-header="false" title="" :mask-closable="true"
			:pt="{ className: 'rounded-t-2xl' }">
			<view class="p-4">
				<view class="py-4 flex flex-row items-center" v-for="value in popupList">
					<cl-icon :name="value.icon" color="#AEAEAE" :size="36" :pt="{ className: 'mr-2' }"></cl-icon>
					<cl-text color="#636363" :pt="{ className: '!text-base' }">{{
						value.text
					}}</cl-text>
				</view>
				<view class="borderh10 pt-4" @tap="close">
					<cl-text color="#6D6D6D" :pt="{ className: 'text-center' }">取消</cl-text>
				</view>
			</view>
		</cl-popup>
	</cl-page>
</template>

<script setup lang="ts">
	import circleItem from "@/components/circle-item.uvue";
	import { isNull, parse, router, usePager, type Response } from "@/cool";
	import { userprofile } from "@/cool/service/user";
	import { t } from "@/locale";
	import type { UserInfo } from "@/types";
	import type { ClTabsItem, useUi } from "@/uni_modules/cool-ui";
	import { onMounted, ref } from "vue";
	const ui = useUi();
	const current = ref(0);
	const isColor = ref(true);
	const showNavbar = ref(false);
	const userRenzheng = ref(false); //用户认证信息
	const visible = ref(false); //列表弹出框
	// 打开弹框
	function open() {
		visible.value = true;
	}
	// 关闭弹框
	function close() {
		visible.value = false;
	}
	const userId = ref(0);
	// 弹出层数据
	type popupItem = {
		icon : string;
		text : string;
	};
	const areaList = ref<string[]>([]);
	const content_type = ref("all");
	const popupList = ref<popupItem[]>([
		{
			icon: "shibai",
			text: "不感兴趣此条内容"
		},
		{
			icon: "jubao",
			text: "屏蔽此用户"
		},
		{
			icon: "a-zu2541",
			text: "投诉内容"
		}
	]);
	type verification = {
		category_label ?: string;
		display_title ?: string;
		verified ?: boolean;
		description ?: string;
		created_at ?: string;
		status ?: string;
		type ?: string;
		status_label ?: string;
		type_label ?: string;
		joined_at ?: string;
	};
	const isAuthMessage = ref<verification>({});
	type renzhengorganization = {
		full_name ?: string;
		city ?: string;
		authorization_letter ?: string;
		intro ?: string;
		short_name ?: string;
		manager_position ?: string;
		business_license ?: string;
		areas_labels ?: string[];
	};
	const organization = ref<renzhengorganization>({});
	// 创建响应式的用户信息数据
	const UserInfo = ref<UserInfo>({
		id: 0,
		is_followed: false
	});

	const tabbar = ref<ClTabsItem[]>([
		{
			label: "全部",
			value: 0
		},
		{
			label: "长文",
			value: 1
		},
		{
			label: "讨论",
			value: 2
		},
		{
			label: "图库",
			value: 3
		}
	]);
	type ImageItem = {
		url : string;
	};

	type ListItem = {
		image : string;
		title ?: string;
		username : string;
		content : string;
		time : string;
		like : number;
		comment : number;
		isLike : boolean;
		imageList ?: ImageItem[];
	};
	const typeTitle = ref("文章")

	// view 滚动事件
	function onScroll(e : UniScrollEvent) {
		// 触发滚动事件
		console.log(e.detail.scrollTop)
		if (e.detail.scrollTop > 44) {
			showNavbar.value = true
		} else {
			showNavbar.value = false
		}

	}
	const listViewRef = ref<ClListViewComponentPublicInstance | null>(null);
	const { refresh, list, listView, loading, loadMore, finished } = usePager(
		(params, { render }) => {
			userprofile(userId.value, {
				content_type: content_type.value,
				page: params["page"],
				limit: params["size"],
			})
				.then((res) => {
					ui.hideLoading();
					const result = parse<UTSJSONObject>(res)!;
					console.log(result, result.user, result.posts);
					const usermes = result.user as UTSJSONObject;
					UserInfo.value.avatar = usermes.getString("avatar");
					UserInfo.value.username = usermes.getString("username");
					UserInfo.value.id = usermes.getNumber("id");
					UserInfo.value.is_followed = usermes.getBoolean("is_followed");

					const isAuth = usermes.verification as UTSJSONObject;
					// 获取认证信息
					isAuthMessage.value.display_title = isAuth.getString("display_title");
					isAuthMessage.value.type_label = isAuth.getString("type_label");
					isAuthMessage.value.joined_at = isAuth.getString("joined_at");

					const getarea = isAuth.organization as UTSJSONObject;
					organization.value.intro = getarea.getString("intro");
					organization.value.city = getarea.getString("city");

					// 获取擅长领域
					const arear = getarea.getArray("areas_labels");
					let getAeraList : string[] = [];
					if (!isNull(getarea.areas_labels)) {
						for (let i = 0; i < arear!!.length; i++) {
							const subItem = arear!![i] as string;
							getAeraList.push(subItem);
						}
						areaList.value = getAeraList;
					}
					const articeList = result.posts as UTSJSONObject;

					const page = articeList.pagination
					console.log('数据列表', articeList.items)
					if (!isNull(page)) {
						const pageDta = parse<UTSJSONObject>(page as Any)!
						render({
							list: articeList.items,
							pagination: {
								page: params["page"],
								size: params["size"],
								total: pageDta.total

							}

						});
					}
					// refresh();
				})
				.catch((err) => {
					ui.showToast({
						message: (err as Response).message!
					});
				});
		});

	type iconitem = {
		icon : string;
		text : string;
	};
	const operationList = ref<iconitem[]>([
		{
			icon: "zhuanfa",
			text: "分享"
		},
		{
			icon: "a-pinglun1",
			text: "评论"
		},
		{
			icon: "dianzan",
			text: "点赞"
		}
	]);

	const onItemClick = (item : UTSJSONObject) => {
		console.log("点击文章项:", item);
		router.push({
			path: "/pages/articlePage/articleDetail",
			params: {
				articleId: item.id,
				title: "圈子"
			}
		});
	};
	function share() {
		ui.showToast({
			message: t("该功能正在开发中")
		});
	}

	// 根据图片数量获取图片宽度
	function getImageWidth(imageCount : number) : string {
		// 限制最多显示3张图片
		const count = Math.min(imageCount, 3);

		if (count === 1) {
			return "384rpx";
		} else if (count === 2) {
			return "268rpx";
		} else {
			return "210rpx";
		}
	}

	// 根据图片数量和索引获取图片样式类
	function getImageClass(imageCount : number, index : number) : string {
		const count = Math.min(imageCount, 3);
		let classes = ["mb-2"];

		// 根据图片数量添加右边距
		if (count === 2) {
			// 两张图片时，第一张添加右边距
			if (index === 0) {
				classes.push("mr-2");
			}
		} else if (count === 3) {
			// 三张图片时，前两张添加右边距
			if (index < 2) {
				classes.push("mr-2");
			}
		}

		return classes.join(" ");
	}
	const getuserMessage = (id : number, content_type : string) => {

	};
	watch(current, (newVal : number, oldVal : number) => {
		ui.showLoading(t("加载中"));
		if (newVal !== oldVal) {
			if (newVal == 0) {
				content_type.value = "all";
				typeTitle.value = "动态";
			} else if (newVal == 1) {
				content_type.value = "article";
				typeTitle.value = "长文"
			} else if (newVal == 2) {
				content_type.value = "discussion";
				typeTitle.value = "讨论"
			} else if (newVal == 3) {
				content_type.value = "image";
				typeTitle.value = "图库"
			}
			refresh({ page: 1 });

		}
	});
	onReady(() => {
		ui.showLoading(t("加载中"));
		const params = router.params();
		console.log(params, "接收到的值");
		if (!isNull(params)) {
			userId.value = params.userId as number;
			// 默认请求
			refresh({});
		}


	});
</script>

<style>
	.fixed-navbar {
		position: fixed;
		top: 0;
		left: 0;
		right: 0;
		z-index: 1000;
		transform: translateY(-100%);
		transition: transform 0.3s ease;
	}

	.fixed-navbar.show {
		transform: translateY(0);
	}

	.container {
		position: relative;
		width: 100%;
		height: 462rpx;
	}

	.background-image {
		position: absolute;
		top: 0;
		left: 0;
		z-index: 1;
		/* 背景图片在底层 */
	}

	.navabar {
		position: relative;
		z-index: 2;
		/* 确保导航栏在背景图片之上 */
	}

	.bg8b {
		background-color: #8ba5ff;
	}

	:deep(.content-item) {
		flex-direction: column !important;
	}

	.operationColor {
		color: #9b9b9b;
	}

	.borderh10 {
		border-top: 10rpx solid #f8f8f8;
	}

	.colo2c {
		color: #2c2c2c;
	}

	.color5e {
		color: #5e5e5e;
	}

	.text {
		@apply text-xs;
	}
</style>
<template>
	<view class="px-5">
		<view class="w-full" :class="index == 0 ? 'pb-2' : 'border py-3'" >
			<l-dateformat style="color:#cbcbcb;fontSize:14px" :date="item?.created_at"
				format="yyyy-MM-dd" />
			<view class="flex flex-row items-center justify-between company">
				<cl-image class="company-img" width="26rpx" height="26rpx" src="/static/image/pdficon.png"></cl-image>
				<view class="flex-1">
					<cl-text ellipsis :lines="2" :pt="{className:'text-base'}">
					{{ '　  ' + (item?.title) }}
					</cl-text>
				</view>
			</view>

			<view class="flex flex-row items-center justify-between mt-1">
				<cl-text color="#A1A1A1" :pt="{className:'text-sm'}">{{ item?.stock_name }}({{item?.stock_code}})</cl-text>
				<cl-text  :pt="{className:'text-sm text-primary-500'}" @click="onItemClick">下载PDF</cl-text>
				
			</view>
		</view>
	</view>
</template>

<script setup>
	import { isMp, router, useRefs } from "@/cool";
	import { computed } from "vue";
	import { parse } from "@/cool";

	defineOptions({
		name: "notice-item"
	});

	// 定义数据类型（注释形式）
	type noticeItem = {
		id : number;
		title : string;
		stock_name : string;
		created_at : string;
		stock_code:string
	};

	const props = defineProps({
		value: {
			type: Object,
			default: () => ({})
		},
		index: {
			type: Number,
			default: 0
		}
	});

	const item = computed(() => parse<noticeItem>(props.value));
	// 处理点击事件
	const emit = defineEmits(["item-click"]);
	const onItemClick = () => {
		emit("item-click", props.value);
	};
</script>

<style lang="less">
	.company {
		position: relative;

		.company-img {
			position: absolute;
			top: 8rpx;
		}
	}
</style>
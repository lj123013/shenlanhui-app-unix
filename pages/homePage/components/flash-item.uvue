<template>
	<view class="px-5">
		<view class="w-full flex flex-row items-start justify-between " :class="index == 0 ? '' : 'border py-4'">
			<view class="w-[20rpx] h-[20rpx] rounded-full  flex flex-col items-center justify-center  mt-2" :class="item!.is_top?'bg-primary-300':'curcle'">
				<view class="w-[10rpx] h-[10rpx] rounded-full" :class="item!.is_top?'bg-primary-500':'curicle-gray'"></view>
			</view>
			<view class="flex-1 ml-1">
				<cl-text  :color="item!.is_top?'primary':'#1a1a1a'" :pt="{
					className: '!text-lg mb-1'
				}">
					{{ item?.title }}</cl-text>
				<cl-text :color="item!.is_top?'primary':'#444'" ellipsis :lines="6" :pt="{
					className: '!text-base'
				}">{{ item?.content }}</cl-text>
				<view class="flex flex-row items-center justify-between">
					<cl-text color="#cbcbcb" :pt="{ className: '!text-sm' }">15:30</cl-text>
					<cl-image width="90rpx" height="18rpx" src="/static/image/ai_icon.png"></cl-image>
				</view>
			</view>
		</view>
	</view>
</template>

<script setup>
import { isMp, router, useRefs } from "@/cool";
import { computed,onMounted } from "vue";
import { parse } from "@/cool";

defineOptions({
	name: "falsh-item"
});

// 定义数据类型（注释形式）
type FalshItem ={
	id: number;
	title: string;
	content: string;
	time: string;
	is_top: boolean;
}

const props = defineProps({
	value: {
		type: Object,
		default: () => ({})
	},
	index: {
		type: Number,
		default: 0
	}
});

const item = computed(() => parse <FalshItem> (props.value));

function clickuser() {
	router.to('/pages/user/userinfo');
}
</script>
<style>
	.curcle{
		background: #e9e9e9;
	}
	.curicle-gray{
		background:#C2C2C2;
	}
</style>
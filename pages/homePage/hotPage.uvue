<template>
	<cl-page>
		<view class="container">
			<!-- 背景图片 -->
			<cl-image class="background-image" width="100%" height="698rpx" src="../../static/image/homeHot-banner.png"
				mode="aspectFill"></cl-image>
			<!-- 页面内容 -->
			<view class="navabar">
				<cl-topbar safe-area-top color='white' background-color="transparent"> </cl-topbar>
				<cl-image class="m-auto" width="262rpx" height="76rpx" src="../../static/image/hot-title.png"
					mode="aspectFill"></cl-image>

			</view>
		</view>
		<view class="content bg-white">
			<cl-tabs v-model="current" :list="tagList" fill :showLine="false" :color="isColor ? '#2854F2' : ''"
				:un-color="isColor ? '#848484' : ''" @change="changetag"></cl-tabs>
			<scroll-view class="hot-reading-list" scroll-y="true" :show-scrollbar="false" :enable-back-to-top="true">
				<cl-list-view ref="listViewRef" :data="listView" :virtual="false" :pt="{
						refresher: {
							className: 'pt-3'
						}
					}" @bottom="loadMore">
					<template #item="{ value, index }">
						<hot-article v-if="current==0" :value="value" :index="index"
							@item-click="onItemClick"></hot-article>
						<hot-company v-else-if="current==1" :value="value" :index="index"></hot-company>
						<hot-useritem v-else-if="current==2" :value="value" :index="index"
							@item-click="onItemClickUser"></hot-useritem>
					</template>

					<template #bottom>
						<view class="py-3">
							<cl-loadmore :loading="loading" v-if="list.length > 0"></cl-loadmore>
						</view>
					</template>
				</cl-list-view>
			</scroll-view>
		</view>
	</cl-page>



</template>

<script setup lang="ts">
	import { ref } from "vue"
	import { isMp, router, useRefs, usePager, parse, isArray, isNull } from "@/cool";
	import Tabbar from "@/components/tabbar.uvue";
	import { useUi } from "@/uni_modules/cool-ui";
	import hotArticle from "../homePage/components/hot-article.uvue";
	import hotCompany from "../homePage/components/hot-company.uvue";
	import hotUseritem from "../homePage/components/hot-useritem.uvue";
	import type { ClTabsItem, ClListItem } from "@/uni_modules/cool-ui/types/index";
	import { t } from "@/locale";
	import { articles, hotcompany, hotUser } from '@/cool/service/list'
	const ui = useUi();
	// 标签滑块模块
	const current = ref(0);
	const isColor = ref(true);
	const tagList = ref<ClTabsItem[]>([
		{
			label: "热门阅读",
			value: 0,
		},
		{
			label: "热门公司",
			value: 1,
		},
		{
			label: "活跃用户",
			value: 2,
		},
	]);
	const changetag = (value : string | number) => {
		// console.log('选中的标签值:', value)
		current.value = value as number
		// refresh({});
	}

	const onItemClick = (item : UTSJSONObject) => {
		router.push({
			path: '/pages/articlePage/articleDetail',
			params: {
				articleId: item.id,
				title: '文章'
			}
		});
	};
	const onItemClickUser = (item : UTSJSONObject) => {
		router.push({
			path: '/pages/user/userinfo',
			params: {
				userId: item.id,
			}
		});
	}
	const listViewRef = ref<ClListViewComponentPublicInstance | null>(null);
	const { refresh, list, listView, loading, loadMore } = usePager((params, { render }) => {
		if (current.value == 0) {
			articles({
				page: params["page"],
				per_page: params["size"],
				status: "published",
				sort: "popular",
			}).then(res => {
				ui.hideLoading()
				if (res != null) {
					const result = parse<UTSJSONObject>(res)!
					render({
						list: result.data,
						pagination: {
							page: params["page"],
							size: params["size"],
							total: result.total

						}

					});
				}

			})
		} else if (current.value == 1) {
			hotcompany({}).then(res => {
				ui.hideLoading()
				if (res != null) {
					const result = parse<UTSJSONObject>(res)!
					render({
						list: result.companies,
						pagination: {
							page: params["page"],
							size: params["size"],
							total: result.total

						}

					});


				}

			})
		} else if (current.value == 2) {
			hotUser({}).then(res => {
				ui.hideLoading()
				if (res != null) {
					const result = parse<UTSJSONObject>(res)!
					render({
						list: result.users,
						pagination: {
							page: params["page"],
							size: params["size"],
							total: result.total

						}

					});


				}

			})
		}


	});
	watch(current, (newVal : number, oldVal : number) => {
		if (newVal !== oldVal) {
			ui.showLoading(t("加载中"));
			refresh({ page: 1 });
		}


	})
	onReady(() => {
		ui.showLoading(t("加载中"));
		// 默认请求
		refresh({});
	});
	onMounted(() => {
		const params = router.params();
		console.log(params, '获取数据')
		if (!isNull(params.index)) {
			current.value = params.index as number
		}

	})
</script>

<style>
	.container {
		position: relative;
		width: 100%;
		height: 698rpx;
	}

	.background-image {
		position: absolute;
		top: 0;
		left: 0;
		z-index: 1;
		/* 背景图片在底层 */
	}

	.navabar {
		position: relative;
		z-index: 2;
		/* 确保导航栏在背景图片之上 */
	}

	.content {
		width: 100%;
		position: absolute;
		z-index: 3;
		top: 400rpx;
		bottom: 0;
		/* 使用绝对定位替代calc()函数 - 占据从400rpx到屏幕底部的剩余高度 */
		display: flex;
		flex-direction: column;
	}

	.hot-reading-list {
		flex: 1;
		height: 100%;
		overflow: hidden;
	}

	.safe-area-bottom {
		padding-bottom: env(safe-area-inset-bottom);
		min-height: 60rpx;
	}
</style>
<template>
	<cl-page>
		<!-- 文章列表 -->
		<cl-list-view ref="listViewRef" :data="listView" :virtual="false" :pt="{
				refresher: {
					className: 'pt-3'
				}
			}" :refresher-enabled="true" @pull="onPull" @bottom="loadMore">
			<template #item="{ value, index }">
				<news-item :value="value" :index="index" @item-click="onItemClick"></news-item>
			</template>

			<template #bottom>
				<view class="py-3">
					<cl-loadmore :loading="loading" v-if="list.length > 0"></cl-loadmore>
				</view>
			</template>
		</cl-list-view>
	</cl-page>
</template>

<script setup lang="ts">
	import { ref } from "vue"
	import { isMp, router, useRefs, usePager, parse, isArray, isNull,type Response } from "@/cool";
	import { useUi } from "@/uni_modules/cool-ui";
	import { t } from "@/locale";
	import newsItem from "../homePage/components/news-item.uvue";
	import { newsData } from '@/cool/service/list'
	const ui = useUi();
	// 处理文章项点击事件
	const onItemClick = (item : UTSJSONObject) => {
		console.log('点击文章项:', item.id);
		router.push({
			path: '/pages/articlePage/articleDetail',
			params: {
				articleId: item.id,
				title:'新闻稿'
			}
		});
	};
	const listViewRef = ref<ClListViewComponentPublicInstance | null>(null);

	let id = 0;
	type pageList = {
		page : string
		size : string
		total : number
	}
	const { refresh, list, listView, loading, loadMore } = usePager((params, { render }) => {
		newsData({
			page: params["page"],
			limit: params["size"],
		}).then(res => {
			ui.hideLoading()
			if (res != null) {
				const result = parse<UTSJSONObject>(res)!
				const page = result.pagination
				if (!isNull(page)) {
					const pageDta=parse<UTSJSONObject>(page as Any)!
					render({
						list: result.items,
						pagination: {
							page: params["page"],
							size: params["size"],
							total: pageDta.total
					
						}
					
					});
				}

				
			}

		}).catch(err=>{
			ui.hideLoading()
			 ui.showToast({
			      message: (err as Response).message!,
			    });
		})
		
	});
	async function onPull() {
		await refresh({ page: 1 });
		listViewRef.value!.stopRefresh();
	}

	onReady(() => {
		ui.showLoading(t("加载中"));
		// 默认请求
		refresh({});
	});
</script>

<style></style>